version: '3.1'

networks:
    meetup-net:

volumes:
    prom_data: {}
    grafana_data: {}

services:
    prometheus:
        image: prom/prometheus
        volumes:
            - ./prom_etc:/etc/prometheus
            - prom_data:/prometheus
        command:
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/prometheus
            - --storage.tsdb.retention=5d
            - --web.console.libraries=/usr/share/prometheus/console_libraries
            - --web.console.templates=/usr/share/prometheus/consoles
            - --web.enable-lifecycle
        ports:
            - 9090:9090
        networks:
            - meetup-net
        deploy:
            replicas: 1
            update_config:
                parallelism: 1
                delay: 10s
            restart_policy:
                condition: on-failure

    grafana:
        image: grafana/grafana
        volumes:
            - ./grafana_etc:/etc/grafana
            - grafana_data:/var/lib/grafana
        ports:
            - 3000:3000
        env_file:
            - env.grafana
        networks:
            - meetup-net
        deploy:
            replicas: 1
            update_config:
                parallelism: 1
                delay: 10s
            restart_policy:
                condition: on-failure

    exporter:
        image: prom/node-exporter
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        command: 
            - --path.procfs=/host/proc 
            - --path.sysfs=/host/sys
            - --collector.filesystem.ignored-mount-points
            - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
        networks:
            - meetup-net
        deploy:
            replicas: 1
            update_config:
                parallelism: 1
                delay: 10s
            restart_policy:
                condition: on-failure

#    ping:
#        container_name: ping
#        image: busybox
#        environment:
#            - PATH=/bin
#        command: /bin/ping 1.1.1.1
#        deploy:
#            replicas: 10
#            update_config:
#                parallelism: 1
#                delay: 10s
#            restart_policy:
#                condition: on-failure
